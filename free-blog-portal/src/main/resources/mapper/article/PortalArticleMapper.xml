<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.core.article.dao.PortalArticleMapper">

    <resultMap id="articleResult" type="com.blog.core.article.vo.PortalArticleListVO">
        <id column = "articleId" property = "articleId"/>
        <result column = "articleTitle" property = "articleTitle"/>
        <result column = "releaseDate" property = "releaseDate"/>
        <result column = "articleDesc" property = "articleDesc"/>
        <result column = "articleImage" property = "articleImage"/>
        <result column = "topStatus" property = "topStatus"/>
        <result column = "commentStatus" property = "commentStatus"/>
        <result column = "fineNoteStatus" property = "fineNoteStatus"/>
        <result column = "articleUserId" property = "articleUserId"/>
        <collection property="tags" column="articleId"
                    ofType="com.blog.core.tag.vo.PortalTagVO"
                    javaType="java.util.ArrayList"
                    select="com.blog.core.tag.dao.PortalTagMapper.selectTagByArticleId">
        </collection>
        <collection property="meta" column="articleId"
                    ofType="com.blog.core.article.vo.PortalArticleInfoVO"
                    select="com.blog.core.article.dao.PortalArticleInfoMapper.selectPortalArticleInfoDetails">
        </collection>
        <collection property="articleUser" column="articleUserId"
                    ofType="com.blog.core.system.user.entity.PortalCommonUser"
                    select="com.blog.core.system.user.dao.PortalCommonUserMapper.selectPortalCommonUserByUserId">
        </collection>
    </resultMap>

    <select id="selectArticleByPage" resultMap="articleResult">
        SELECT
            pa.article_id articleId,
            pa.article_title articleTitle,
            pa.release_date releaseDate,
            pa.article_desc articleDesc,
            pa.article_image articleImage,
            pa.top_status topStatus,
            pa.comment_status commentStatus,
            pa.fine_note_status fineNoteStatus,
            pa.article_user_id articleUserId
        FROM
            portal_article pa
        WHERE
            pa.enable = '1'
        AND
            pa.release_status = '1'
    </select>

    <select id="selectArticleByArticleId" parameterType="java.lang.Integer"
            resultType="com.blog.core.article.vo.PortalArticleDetailsVO">
         SELECT
            pa.article_id articleId,
            pa.article_title articleTitle,
            pa.release_date releaseDate,
            pa.article_content_html articleContentHtml,
            pa.article_content_markdown articleContentMarkDown,
            pa.article_desc articleDesc,
            pa.article_image articleImage,
            pa.top_status topStatus,
            pa.comment_status commentStatus,
            pa.fine_note_status fineNoteStatus,
            pa.article_user_id articleUserId,
            pu.nick_name articleAuthor,
            pu.avatar articleAuthorImage
        FROM
            portal_article pa
        LEFT JOIN portal_user pu ON pa.article_user_id = pu.user_id
        WHERE pa.article_id = #{articleId}
    </select>

    <update id="updateReadArticleByArticleId" parameterType="java.lang.Integer">
        UPDATE portal_article
        SET like_number = like_number + 1
        WHERE article_id = #{articleId}
    </update>

    <update id="updateApproves" parameterType="java.lang.Integer">
        UPDATE portal_article
        SET approves = approves + 1
        WHERE article_id = #{articleId}
    </update>

    <update id="updateTemperature" parameterType="java.lang.Integer">
        UPDATE portal_article
        SET temperature = temperature + 1
        WHERE article_id = #{articleId}
    </update>

    <update id="updateComments" parameterType="java.lang.Integer">
        UPDATE portal_article
        SET comments = comments + 1
        WHERE article_id = #{articleId}
    </update>

    <update id="checkArticle" parameterType="com.blog.core.article.entity.PortalArticle">
        UPDATE portal_article
        SET article_status = #{articleStatus},
        release_status = #{releaseStatus},
        release_date = #{releaseDate}
        WHERE article_id = #{articleId}
    </update>

    <update id="submitCheckArticle" parameterType="com.blog.core.article.entity.PortalArticle">
        UPDATE portal_article
        SET article_status = #{articleStatus},
        article_title = #{articleTitle},
        article_content = #{articleContent},
        article_tag = #{articleTag},
        article_images = #{articleImages},
        article_user_id = #{articleUserId}
        WHERE article_id = #{articleId}
    </update>

    <insert id="insertPortalArticleDraft" parameterType="com.blog.core.article.entity.PortalArticle">
        INSERT INTO
        portal_article
        (
            article_title,
            article_desc,
            article_content_html,
            article_content_markdown,
            article_user_id,
            article_tag,
            article_image,
            article_status,
            release_status,
            create_id,
            create_time
        )
        VALUES
        (
            #{articleTitle},
            #{articleDesc},
            #{articleContentHtml},
            #{articleContentMarkDown},
            #{articleUserId},
            #{articleImage},
            #{articleStatus},
            #{releaseStatus},
            #{createId},
            #{createTime}
        )

    </insert>

    <update id="deletePortalArticleDraft">
        UPDATE
            portal_article
        SET
            enable = #{enableEnum.value}
        WHERE
            article_id = #{articleId}
    </update>

    <insert id="insert" parameterType="com.blog.core.article.entity.PortalArticle">
        INSERT INTO
        portal_article
        (
            article_title,
            release_date,
            article_desc,
            article_content_html,
            article_user_id,
            article_image,
            audit_status,
            release_status,
            create_id,
            create_time
        )
        VALUES
        (
            #{articleTitle},
            #{releaseDate},
            #{articleDesc},
            #{articleContentHtml},
            #{articleUserId},
            #{articleImage},
            #{auditStatus},
            #{releaseStatus},
            #{createId},
            #{createTime}
        )
    </insert>
</mapper>
