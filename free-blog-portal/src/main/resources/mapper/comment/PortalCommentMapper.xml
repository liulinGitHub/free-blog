<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.core.comment.dao.PortalCommentMapper">

    <select id="selectCommentByPage" resultType="com.blog.core.comment.entity.vo.PortalArticleCommentVO">
        SELECT
        `id`,
        `comment_content`,
        `comment_user_id`,
        `parent_id`,
        `article_id`,
        `is_parent`,
        `comment_time`,
        `approves`,
        `is_enable`
        FROM
        portal_comment
    </select>

    <select id="queryCommentById" resultType="com.blog.core.comment.entity.vo.PortalArticleCommentVO">
        SELECT
            comment .id AS id,
            comment .comment_content AS commentContent,
            comment .parent_id AS parentId,
            comment .article_id AS articleId,
            comment .is_parent AS isParent,
            comment .comment_time AS commentTime,
            comment .approves AS approves,
	        CASE WHEN USER .nick_name IS NOT NULL
	        THEN  USER .nick_name
            ELSE  user_name
            END AS author,
            user.avatar AS avatar
        FROM
	        portal_comment AS comment
        LEFT JOIN portal_user AS user ON `comment`.comment_user_id = `user`.id
        WHERE comment.id = #{commentId}
        ORDER BY comment.comment_time desc
    </select>

    <select id="queryCommentByParentId" resultType="com.blog.core.comment.entity.vo.PortalArticleCommentVO">
        SELECT
            comment .id AS id,
            comment .comment_content AS commentContent,
            comment .parent_id AS parentId,
            comment .article_id AS articleId,
            comment .is_parent AS isParent,
            comment .comment_time AS commentTime,
            comment .approves AS approves,
            CASE WHEN USER .nick_name IS NOT NULL
            THEN  USER .nick_name
            ELSE  user_name
            END AS author,
            user.avatar AS avatar
        FROM
            portal_comment AS comment
        LEFT JOIN portal_user AS user ON `comment`.comment_user_id = `user`.id
        WHERE comment.parent_id = #{parentId}
        ORDER BY comment.comment_time desc
    </select>

    <select id="queryCommentByArticleId" resultType="com.blog.core.comment.entity.vo.PortalArticleCommentVO" parameterType="java.lang.String">
        SELECT
            comment.id AS id,
            comment.comment_content AS commentContent,
            comment.parent_id AS parentId,
            comment.article_id AS articleId,
            comment.is_parent AS isParent,
            comment.comment_time AS commentTime,
            comment.approves AS approves,
        CASE
            WHEN user.nick_name IS NOT NULL THEN
            user.nick_name ELSE user_name
            END AS author,
            user.avatar AS avatar
        FROM
            portal_comment AS comment
            LEFT JOIN portal_user AS user ON comment.comment_user_id = user.id
        WHERE
            comment.article_id = #{articleId}
            AND comment.is_parent = '1'
        ORDER BY
        comment.comment_time DESC
    </select>

    <!--auto generated Code-->
    <insert id="insertComment" useGeneratedKeys="true" keyProperty="id" parameterType="com.blog.core.comment.entity.domain.PortalArticleComment">
        INSERT INTO portal_comment (
            `id`,
            `comment_content`,
            `comment_user_id`,
            `parent_id`,
            `article_id`,
            `is_parent`,
            `comment_time`,
            `is_enable`
        ) VALUES (
            #{id},
            #{commentContent},
            #{commentUserId},
            #{parentId},
            #{articleId},
            #{isParent},
            #{commentTime},
            #{isEnable}
        )
    </insert>
</mapper>
