<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.core.system.role.dao.PortalRoleMapper">

    <select id="selectPortalRole" resultType="com.blog.core.system.role.vo.PortalRoleVO">
        select
            role_id roleId,
            role_name roleName,
            role_describe roleDescribe,
            role_code roleCode,
            enable enable,
            create_time createTime,
            update_time updateTime,
            create_id createId,
            update_id updateId
        from portal_role
    </select>

    <select id="selectRoleByPage" resultType="com.blog.core.system.role.vo.PortalRoleVO">
        select
            role_id roleId,
            role_name roleName,
            role_describe roleDescribe,
            role_code roleCode,
            enable enable,
            create_time createTime,
            update_time updateTime,
            create_id createId,
            update_id updateId
        from portal_role
        <where>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName}
            </if>
        </where>
    </select>

    <select id="selectRoleByRoleId" parameterType="java.lang.Integer" resultType="com.blog.core.system.role.vo.PortalRoleVO">
        SELECT
            role_id roleId,
            role_name roleName,
            role_describe roleDescribe,
            role_code roleCode,
            enable enable,
            create_time createTime,
            create_id createId
        FROM
            portal_role
        WHERE
            role_id = #{roleId}
    </select>

    <insert id="addRole" useGeneratedKeys="true" keyProperty="id" parameterType="com.blog.core.system.role.entity.PortalRole">
        INSERT INTO
        portal_role (
            role_name,
            role_describe,
            role_code,
            enable,
            create_id,
            create_time
        )
        VALUES (
            #{roleName},
            #{roleDescribe},
            #{roleCode},
            #{enable.value},
            #{createId},
            #{createTime}
        )
    </insert>

    <update id="editRole" parameterType="com.blog.core.system.role.entity.PortalRole">
        UPDATE
            portal_role
        SET
            role_name = #{roleName},
            role_describe = #{roleDescribe},
            update_id = #{updateId},
            update_time = #{updateTime}
        WHERE
            role_id = #{roleId}
    </update>

    <delete id="deleteRole" parameterType="java.lang.Integer">
        DELETE FROM
            portal_role
        WHERE
            role_id = #{roleId}
    </delete>

    <update id="enableRole" parameterType="java.lang.Integer">
        UPDATE
            portal_role
        SET
            enable = '1'
        WHERE
            role_id = #{roleId}
    </update>

    <update id="disabledRole" parameterType="java.lang.Integer">
        UPDATE
            portal_role
        SET
            enable = '0'
        WHERE
            role_id = #{roleId}
    </update>

    <insert id="addUserRole" parameterType="com.blog.core.system.role.entity.PortalUserRole">
        INSERT
            portal_role
        (
            role_id,
            user_id,
            create_id,
            create_time
        )
         VALUES
         (
            #{roleId},
            #{userId},
            #{createId},
            #{createTime}
         )
    </insert>

    <select id="selectRoleByUserId" parameterType="java.lang.Integer" resultType="com.blog.core.system.role.vo.PortalRoleVO">
         SELECT
            role.role_id  roleId,
            role.role_name  roleName,
            role.role_describe  roleDescribe,
            role.role_code  roleCode,
            role.enable  enable,
            role.create_time  createTime
        FROM
            portal_role  role
            LEFT JOIN portal_user_role  userRole ON userRole.role_id = role.role_id
        <where>
            <if test="userId != null and userId !=''">
                userRole.user_id = #{userId}
            </if>
        </where>
    </select>

    <select id="selectRoleByUrl" parameterType="java.lang.String" resultType="com.blog.core.system.role.vo.PortalRoleVO">
        SELECT
            pr.role_id  roleId,
            pr.role_name  roleName,
            pr.role_describe  roleDescribe,
            pr.role_code  roleCode,
            pr.enable  enable,
            pr.create_time  createTime
        FROM
            portal_role pr
            LEFT JOIN portal_role_menu prm ON pr.role_id = prm.role_id
            LEFT JOIN portal_menu pm ON prm.menu_code = pm.menu_code
        WHERE
            pm.menu_url = #{url}
    </select>
</mapper>
